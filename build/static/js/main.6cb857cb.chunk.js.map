{"version":3,"sources":["header/brand.tsx","header/index.tsx","util/index.ts","store/index.ts","components/songList/index.tsx","components/recommend/index.tsx","components/top/index.tsx","components/search/result.tsx","components/search/index.tsx","util/hooks/debounce.ts","header/tabs.tsx","components/recommend/playList.tsx","components/play/progress.tsx","components/play/index.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Brand","className","HttpMethod","FixHeader","req","url","options","a","fetch","res","json","highlight","content","keyword","tagName","c","toLowerCase","k","includes","idx","indexOf","replaceStr","substr","length","replaceHtml","regExp","RegExp","replace","parsePath","path","pathList","split","parsePoiter","obj","poiter","Array","isArray","initState","clientWidth","loading","songInfo","sessionStorage","JSON","parse","reducer","state","action","type","width","info","Store","React","createContext","SongList","songs","showRate","rateMinLength","topRateMarked","artists","album","onSongClick","alias","dispatch","useContext","artistsPath","albumPath","aliasPath","onItemClick","item","artistsList","aliasList","name","join","id","songUrl","data","alert","Promise","all","lrcInfo","picUrl","al","lyric","lrc","setItem","stringify","window","location","hash","renderAuthorAlbum","str","map","i","albumObj","aliasObj","key","onClick","toString","padStart","renderRate","dangerouslySetInnerHTML","__html","useState","newSongs","setNewSongs","songsList","setSongsList","useEffect","fetchSongsList","result","fetchNewSongs","src","alt","playCount","toFixed","time","date","Date","month","getMonth","day","getDate","observedElementStyle","height","observerTarget","useRef","end","setEnd","songList","setSongList","setAllSongs","initObserver","observer","IntersectionObserver","entries","forEach","entry","isIntersecting","currEnd","list","e","slice","current","observe","code","playlist","tracks","getSongList","ref","style","visible","hidden","display","SearchResult","config","setOffsetConfig","divRef","offset","limit","isScrollTrigger","isEnd","searchCount","setCount","searchBoxRef","text","setText","hotList","setHotList","isCompositionInput","setIsCompositionInput","suggest","setSuggest","isSearchTips","setIsSearchTips","isResultPage","setIsResultPage","searchText","setSearchText","setResult","historyList","setHistoryList","offsetConfig","debounceText","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","searchConfig","count","recordSearchHistory","songName","splice","unshift","clickItem","innerText","target","blur","clickHot","hots","getHotList","history","localStorage","getItem","getSeggest","allMatch","getResult","songCount","songListCount","handledSongs","handledResult","size","visibility","autoComplete","onChange","val","onCompositionStart","onCompositionEnd","onKeyUp","which","onBlur","onFocus","defaultValue","index","first","tabs","title","PlayList","setId","setRes","isFolded","setIsFolded","changeFold","playListId","prop","params","urlParams","URLSearchParams","get","parseHashParam","getDetail","backgroundImage","coverImgUrl","creator","avatarUrl","nickname","tags","description","memo","duration","setPlayTime","percent","formatDuration","useMemo","Math","floor","sec","stopPropagation","long","pageX","formatCurrent","Play","parsed","setParsed","imgClass","setImgClass","lastDeg","setLastDeg","audioTag","nextLrc","el","setDuration","setCurrent","scrollTranslate","setScrollTranslate","lrcHeightList","setLrcHeightList","timelineList","setTimelineList","isAudioReadyFirstTrigget","changeStatus","picStyle","paused","play","imgTag","document","querySelector","rollTag","eleTransform","getComputedStyle","transform","matrix","match","matrixParams","call","Number","deg","b","d","aa","round","asin","PI","bb","acos","cc","dd","matrix2Deg","pause","undefined","trim","data-timeline","renderLyric","moreTimeIdx","findIndex","reduce","prevEle","nodeList","querySelectorAll","targetEles","targetEle","eleList","color","nextElementSibling","currentTime","onEnded","onCanPlay","dur","lrcList","heightList","offsetHeight","tlList","getAttribute","firstLrc","nextEle","onTimeUpdate","nextLrcTime","previousElementSibling","next","x","App","useReducer","page","setPage","jump","addEventListener","getClientWidth","documentElement","fn","timer","args","debounce","Provider","renderPage","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cb857cb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport default function Brand() {\r\n  return <div className=\"brand\"></div>;\r\n}\r\n","import React from 'react';\r\nimport Brand from './brand';\r\n// import Tabs from './tabs';\r\n\r\nconst FixHeader = () => {\r\n  return (\r\n    <div className=\"fix-header\">\r\n      <Brand></Brand>\r\n      {/* <Tabs></Tabs> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FixHeader;\r\n","export enum HttpMethod {\r\n  get = 'GET',\r\n  post = 'post',\r\n}\r\n\r\nexport const req = async (url: string, options?: RequestInit) => {\r\n  const res = await fetch(url, options);\r\n  return res.json();\r\n};\r\n\r\nexport const debounce = function(fn: Function, delay: number = 300) {\r\n  let timer: number | undefined;\r\n  return (...args: any[]) => {\r\n    if (timer) {\r\n      clearTimeout(timer);\r\n    }\r\n    timer = window.setTimeout(() => {\r\n      fn(...args);\r\n    }, delay);\r\n  };\r\n};\r\n\r\nexport const throttle = function(fn: Function, delay: number = 300) {\r\n  let timer: number | undefined;\r\n  return (...args: any[]) => {\r\n    if (!timer) {\r\n      timer = window.setTimeout(() => {\r\n        fn(...args);\r\n        timer = void 0;\r\n      }, delay);\r\n    }\r\n  };\r\n};\r\n\r\nexport const highlight = (\r\n  content: string,\r\n  keyword: string,\r\n  tagName: string = 'span',\r\n  className: string = 'highlight'\r\n): string => {\r\n  if (!content || !keyword) {\r\n    return '';\r\n  }\r\n  const c = content.toLowerCase();\r\n  const k = keyword.toLowerCase();\r\n  if (c.includes(k)) {\r\n    const idx = c.indexOf(k);\r\n    const replaceStr = content.substr(idx, keyword.length);\r\n    const replaceHtml = `<${tagName} class=\"${className}\">${replaceStr}</${tagName}>`;\r\n    const regExp = new RegExp(keyword, 'gi');\r\n    return content.replace(regExp, replaceHtml);\r\n  }\r\n  return content;\r\n};\r\n\r\nexport const parseHashParam = (prop: string): string => {\r\n  const { hash } = window.location;\r\n  const params = hash.split('?');\r\n  const urlParams = params[1] ? new URLSearchParams(params[1]) : null;\r\n  if (urlParams) {\r\n    return urlParams.get(prop) || '';\r\n  }\r\n  return '';\r\n};\r\n\r\n/**\r\n * 解析matrix矩阵，0°-360°，返回旋转角度\r\n * 当a=b||-a=b,0<=deg<=180\r\n * 当-a+b=180,180<=deg<=270\r\n * 当a+b=180,270<=deg<=360\r\n *\r\n * 当0<=deg<=180,deg=d;\r\n * 当180<deg<=270,deg=180+c;\r\n * 当270<deg<=360,deg=360-(c||d);\r\n */\r\nexport const matrix2Deg = (a: number, b: number, c: number, d: number) => {\r\n  var aa = Math.round((180 * Math.asin(a)) / Math.PI);\r\n  var bb = Math.round((180 * Math.acos(b)) / Math.PI);\r\n  var cc = Math.round((180 * Math.asin(c)) / Math.PI);\r\n  var dd = Math.round((180 * Math.acos(d)) / Math.PI);\r\n  var deg = 0;\r\n  if (aa === bb || -aa === bb) {\r\n    deg = dd;\r\n  } else if (-aa + bb === 180) {\r\n    deg = 180 + cc;\r\n  } else if (aa + bb === 180) {\r\n    deg = 360 - cc || 360 - dd;\r\n  }\r\n  return deg >= 360 ? 0 : deg;\r\n};\r\n\r\nexport const parsePath = (path: string): string | string[] => {\r\n  const pathList = path.split('.');\r\n  return pathList.length === 1 ? pathList[0] : pathList;\r\n};\r\n\r\nexport const parsePoiter = (obj: any, poiter: string | string[]) => {\r\n  if (Array.isArray(poiter)) {\r\n    let res = obj;\r\n    for (let prop of poiter) {\r\n      res = res[prop];\r\n      if (!res) {\r\n        break;\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n  return obj[poiter];\r\n};\r\n","import React from 'react';\n\nexport interface SongInfo {\n  id: string;\n  name: string;\n  picUrl: string;\n}\n\nexport interface RootState {\n  clientWidth: number;\n  loading: boolean;\n  songInfo?: SongInfo;\n}\nexport const initState: RootState = {\n  clientWidth: 0,\n  loading: false,\n  songInfo: sessionStorage.songInfo ? JSON.parse(sessionStorage.songInfo) : void 0,\n};\n\nexport const reducer = (state: RootState, action: any): RootState => {\n  switch (action.type) {\n    case 'setClientWidth':\n      return { ...state, clientWidth: action.width }\n    case 'showLoading':\n      return { ...state, loading: true };\n    case 'hideLoading':\n      return { ...state, loading: false };\n    case 'setSongInfo':\n      return { ...state, songInfo: action.info };\n    default:\n      return state;\n  }\n};\n\nconst Store = React.createContext<{ state: any; dispatch: React.Dispatch<any> } | null>(null);\n\nexport default Store;\n","import React, { useContext } from 'react';\r\nimport { highlight, parsePath, parsePoiter, req } from '../../util';\r\nimport Store from '../../store';\r\n\r\nexport interface SongListProps {\r\n  /** 歌曲列表 */\r\n  songs: any[];\r\n  /** 是否显示排名 */\r\n  showRate?: boolean;\r\n  /** 排名最小长度，不足签名补零，默认为2，需要显示排名的时候才有用 */\r\n  rateMinLength?: number;\r\n  /** 排名前几才会标记红，默认为3，需要显示排名才有用 */\r\n  topRateMarked?: number;\r\n  /** 对象实行名，如果是二级属性以上，传 xx.xxx */\r\n  artists?: string;\r\n  /** 对象实行名，如果是二级属性以上，传 xx.xxx */\r\n  album?: string;\r\n  alias?: string;\r\n  /** 用于高亮的关键词 */\r\n  keyword?: string;\r\n  /** 歌曲点击回调函数 */\r\n  onSongClick?: (item: any) => void;\r\n}\r\n\r\n/**\r\n * 组件用于抽取 songlist 相同的部分\r\n */\r\nconst SongList = ({\r\n  songs,\r\n  showRate = false,\r\n  rateMinLength = 2,\r\n  topRateMarked = 3,\r\n  artists = 'artists',\r\n  album = 'album',\r\n  keyword = '',\r\n  onSongClick,\r\n  alias = 'alias',\r\n}: SongListProps) => {\r\n  const store = useContext(Store);\r\n  const dispatch = store!.dispatch;\r\n  const artistsPath = parsePath(artists);\r\n  const albumPath = parsePath(album);\r\n  const aliasPath = parsePath(alias);\r\n  /**\r\n   *\r\n   * @param item 歌曲的全部信息\r\n   * @paramartistsObj 艺术家信息\r\n   * @param aliasList 歌曲的别名信息\r\n   */\r\n  const onItemClick = async (item: any, artistsList: string[] = [], aliasList: string[]) => {\r\n    let name = item.name;\r\n    if (aliasList?.length) {\r\n      name += `（${aliasList.join('')}）`;\r\n    }\r\n    const artists = artistsList.join('/');\r\n    const songUrl: any = await req(`/song/url?id=${item.id}`);\r\n    const url = songUrl?.data[0]?.url || '';\r\n    if (!url) {\r\n      alert('无版权！请登录再试');\r\n    }\r\n    const [songInfo, lrcInfo] = await Promise.all([\r\n      req(`/song/detail?ids=${item.id}`),\r\n      req(`/lyric?id=${item.id}`),\r\n    ]);\r\n    const info = {\r\n      name,\r\n      artists,\r\n      id: item.id,\r\n      picUrl: songInfo?.songs[0]?.al?.picUrl || '',\r\n      songUrl: url,\r\n      lyric: lrcInfo?.lrc?.lyric,\r\n    };\r\n    sessionStorage.setItem('songInfo', JSON.stringify(info));\r\n    dispatch({ type: 'setSongInfo', info });\r\n    window.location.hash = `/play?id=${item.id}`;\r\n    if (typeof onSongClick === 'function') {\r\n      onSongClick(item);\r\n    }\r\n  };\r\n  const renderAuthorAlbum = (artistsList: string[], album: any): string => {\r\n    if (!artistsList || !artistsList.length) {\r\n      return '';\r\n    }\r\n    let str = '';\r\n    str += artistsList.join(' / ');\r\n    if (album) {\r\n      str += ' - ';\r\n      str += album.name;\r\n    }\r\n    if (!keyword) {\r\n      return str;\r\n    }\r\n    return highlight(str, keyword);\r\n  };\r\n  const renderRate = (idx: number) => {\r\n    if (!showRate) {\r\n      return null;\r\n    }\r\n    if (idx < topRateMarked) {\r\n      return (\r\n        <div className=\"new-songs-rate rate-top-marked\">\r\n          {(idx + 1).toString().padStart(rateMinLength, '0')}\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"new-songs-rate\">{(idx + 1).toString().padStart(rateMinLength, '0')}</div>\r\n    );\r\n  };\r\n  const renderAlias = (aliasList: string[] | undefined) => {\r\n    if (!aliasList || !aliasList.length) {\r\n      return null;\r\n    }\r\n    return <span className=\"new-songs-alias\">({aliasList.join('')})</span>;\r\n  };\r\n  const renderSongs = () =>\r\n    songs.map((item: any, idx: number) => {\r\n      const artistsObj = parsePoiter(item, artistsPath);\r\n      const artistsList: string[] = artistsObj.map((i: any) => i.name);\r\n      const albumObj = parsePoiter(item, albumPath);\r\n      const aliasObj: string[] = parsePoiter(item, aliasPath);\r\n      return (\r\n        <div\r\n          className=\"new-songs-item\"\r\n          key={idx}\r\n          onClick={() => onItemClick(item, artistsList, aliasObj)}\r\n        >\r\n          {renderRate(idx)}\r\n          <div className=\"new-songs-info\">\r\n            {keyword ? (\r\n              <div\r\n                className=\"new-songs-title\"\r\n                dangerouslySetInnerHTML={{ __html: highlight(item.name, keyword) }}\r\n              ></div>\r\n            ) : (\r\n              <div className=\"new-songs-title\">\r\n                {item.name} {renderAlias(aliasObj)}\r\n              </div>\r\n            )}\r\n            {keyword ? (\r\n              <div\r\n                className=\"new-songs-extra\"\r\n                dangerouslySetInnerHTML={{ __html: renderAuthorAlbum(artistsList, albumObj) }}\r\n              ></div>\r\n            ) : (\r\n              <div className=\"new-songs-extra\">{renderAuthorAlbum(artistsList, albumObj)}</div>\r\n            )}\r\n          </div>\r\n          <div className=\"play-button\">\r\n            <span className=\"btn-icon\"></span>\r\n          </div>\r\n        </div>\r\n      );\r\n    });\r\n\r\n  if (!songs || !songs.length) {\r\n    return null;\r\n  }\r\n  return <section className=\"new-songs\">{renderSongs()}</section>;\r\n};\r\n\r\nexport default SongList;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { req } from '../../util';\r\nimport SongList from '../songList';\r\n\r\nexport default () => {\r\n  const [newSongs, setNewSongs] = useState<any[]>([]);\r\n  const [songsList, setSongsList] = useState<any[]>([]);\r\n  useEffect(() => {\r\n    const fetchSongsList = async () => {\r\n      const res = await req('/personalized?limit=6');\r\n      if (res && res.result) {\r\n        setSongsList(res.result);\r\n      }\r\n    };\r\n    const fetchNewSongs = async () => {\r\n      const res = await req('/personalized/newsong');\r\n      if (res && res.result) {\r\n        setNewSongs(res.result);\r\n      }\r\n    };\r\n    fetchSongsList();\r\n    fetchNewSongs();\r\n  }, []);\r\n  const formatPlayCount = (count: number): string => {\r\n    const num = (count / 10000).toFixed(1);\r\n    return num + '万';\r\n  };\r\n  const clickPlayList = (id: string): void => {\r\n    window.location.hash = `/playList?id=${id}`;\r\n  };\r\n  const renderPlayList = () => {\r\n    return songsList.map(item => (\r\n      <div className=\"remd-li\" key={item.id} onClick={() => clickPlayList(item.id)}>\r\n        <div className=\"remd-img\">\r\n          <img src={item.picUrl} alt={item.name} className=\"u-img\" />\r\n          <span className=\"u-earp remd_lnum\">{formatPlayCount(item.playCount)}</span>\r\n        </div>\r\n        <div className=\"remd-text\">{item.name}</div>\r\n      </div>\r\n    ));\r\n  };\r\n  return (\r\n    <div className=\"recommend\">\r\n      <div className=\"remd-tl\">推荐歌单</div>\r\n      <section className=\"remd-songs\">\r\n        <div className=\"remd-list\">{renderPlayList()}</div>\r\n      </section>\r\n      <div className=\"remd-tl\">最新音乐</div>\r\n      <SongList\r\n        songs={newSongs}\r\n        artists=\"song.artists\"\r\n        album=\"song.album\"\r\n        alias=\"song.alias\"\r\n      ></SongList>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState, useRef } from 'react';\r\nimport { req } from '../../util';\r\nimport SongList from '../songList';\r\n\r\nlet time: string = '';\r\n(() => {\r\n  const date = new Date();\r\n  const month = date.getMonth() + 1;\r\n  const day = date.getDate();\r\n  time = `${month.toString().padStart(2, '0')}月${day.toString().padStart(2, '0')}日`;\r\n})();\r\n\r\nconst observedElementStyle = { height: 1, width: '100vw' };\r\n\r\nexport default () => {\r\n  const observerTarget = useRef<HTMLDivElement>(null);\r\n  const [end, setEnd] = useState<number>(20);\r\n  const [songList, setSongList] = useState<any[]>([]);\r\n  const [, setAllSongs] = useState<any[]>([]);\r\n  // const onSongClick = (item: any) => {\r\n  //   console.log(item);\r\n  // };\r\n  const initObserver = async () => {\r\n    const observer = new IntersectionObserver(entries => {\r\n      entries.forEach(entry => {\r\n        if (entry.isIntersecting) {\r\n          let songs: any[];\r\n          let currEnd: number = 0;\r\n          // 因为这个观察者是初始化第一个闭包的时候定义的\r\n          // 这里拿到的 allSongs 永远都是第一个闭包环境的值\r\n          // 所以要通过这种方式拿到最新的值\r\n          setAllSongs(list => {\r\n            songs = list;\r\n            return list;\r\n          });\r\n          setEnd(e => {\r\n            currEnd = e;\r\n            return e + 20;\r\n          });\r\n          setSongList(songs!.slice(0, currEnd));\r\n        }\r\n      });\r\n    });\r\n    if (observerTarget.current) {\r\n      observer.observe(observerTarget.current);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    const getSongList = async () => {\r\n      const res = await req('/top/list?idx=1&limit=20');\r\n      if (res && res.code === 200 && res.playlist && res.playlist.tracks) {\r\n        initObserver();\r\n        setAllSongs(res.playlist.tracks);\r\n        setSongList(res.playlist.tracks.slice(0, end));\r\n        setEnd(end + 20);\r\n      }\r\n    };\r\n    getSongList();\r\n    // 组件初始化的时候触发一次就好\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <div className=\"top\">\r\n      <section className=\"top-header\">\r\n        <div className=\"top-logo\"></div>\r\n        <div className=\"top-time\">更新时间：{time}</div>\r\n      </section>\r\n      <SongList songs={songList} artists=\"ar\" album=\"al\" alias=\"alia\" showRate></SongList>\r\n      <div ref={observerTarget} style={observedElementStyle}></div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { SearchConfig } from '.';\r\nimport SongList from '../songList';\r\n// import HighLight from 'react-highlight-words';\r\n// const types = ['artist', 'mv', 'album'];\r\n\r\nconst visible: React.CSSProperties = {};\r\nconst hidden: React.CSSProperties = { display: 'none' };\r\nexport interface SearchResultProps {\r\n  style?: React.CSSProperties;\r\n  result?: any;\r\n  /** 用于 html 高亮的关键词 */\r\n  keyword: string;\r\n  config: SearchConfig;\r\n  setOffsetConfig?: React.Dispatch<\r\n    React.SetStateAction<{\r\n      offset: number;\r\n      isScrollTrigger: boolean;\r\n    }>\r\n  >;\r\n}\r\n\r\nexport default function SearchResult({\r\n  style,\r\n  result,\r\n  keyword,\r\n  config,\r\n  setOffsetConfig,\r\n}: SearchResultProps) {\r\n  const divRef = useRef<HTMLDivElement>(null);\r\n  const isLoadingVisible = (): React.CSSProperties => {\r\n    if (!result.songs || config.isEnd) {\r\n      return hidden;\r\n    }\r\n    return visible;\r\n  };\r\n  const isNoResultVisible = (): React.CSSProperties => {\r\n    if (!result.songs || !config.isEnd) {\r\n      return hidden;\r\n    }\r\n    return visible;\r\n  };\r\n  // 组件加载完成，添加监视器\r\n  useEffect(() => {\r\n    const observer = new IntersectionObserver((entries: IntersectionObserverEntry[]) => {\r\n      if (divRef.current) {\r\n        entries.forEach(item => {\r\n          if (item.isIntersecting) {\r\n            if (typeof setOffsetConfig === 'function') {\r\n              setOffsetConfig({\r\n                offset: config.limit + config.offset,\r\n                isScrollTrigger: true,\r\n              });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n    if (divRef.current) {\r\n      observer.observe(divRef.current);\r\n    }\r\n    // 只需要开头触发一次就好，如果后续每次都创建一个观察者，内存泄漏警告\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  return (\r\n    <section className=\"search-result\" style={style}>\r\n      <SongList songs={result.songs} keyword={keyword}></SongList>\r\n      <div ref={divRef} style={isLoadingVisible()} className=\"label\">\r\n        加载中……\r\n      </div>\r\n      <div style={isNoResultVisible()} className=\"label\">\r\n        全部加载完\r\n      </div>\r\n    </section>\r\n  );\r\n}\r\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Icon } from 'antd-mobile';\nimport { req } from '../../util';\nimport useDebounce from '../../util/hooks/debounce';\nimport Result from './result';\n\nexport interface SearchConfig {\n  limit: number;\n  offset: number;\n  count: number;\n  isEnd: boolean;\n}\n\nexport default () => {\n  // 用来计算搜索的次数，还有一个功能，\b如果搜索文字没有改变的话，不会触发 useEffect 搜索，通过这个改变强制触发搜索\n  const [searchCount, setCount] = useState(0);\n  // input 输入框\n  const searchBoxRef = useRef<HTMLInputElement>(null);\n  // input 输入框的值\n  const [text, setText] = useState('');\n  // 热门推荐搜索词\n  const [hotList, setHotList] = useState<any[]>([]);\n  // 是否是输入法输入\n  const [isCompositionInput, setIsCompositionInput] = useState(false);\n  // 搜索建议列表\n  const [suggest, setSuggest] = useState<any[]>([]);\n  // 是否是搜索建议列表\n  const [isSearchTips, setIsSearchTips] = useState(false);\n  // 是否是搜索结果页\n  const [isResultPage, setIsResultPage] = useState(false);\n  // 搜索的关键词，改变的话，会触发搜索\n  const [searchText, setSearchText] = useState('');\n  // 搜索结果\n  const [result, setResult] = useState<any>({});\n  // 历史记录\n  const [historyList, setHistoryList] = useState<string[]>([]);\n  /** 这两个变量合并到 offsetConfig 这个对象里面 */\n  // // 是否是下拉触发的搜索\n  // const [isScrollTrigger, setIsScrollTrigger] = useState(false);\n  // // 搜索的偏移\n  // const [offset, setOffset] = useState(0);\n  /** 发现如果 effect 同时依赖 isScrollTrigger offset 的时候，会由于改变这两个值的触发器在子组件，会导致触发两次 effect */\n  const [offsetConfig, setOffsetConfig] = useState({\n    offset: 0,\n    isScrollTrigger: false,\n  });\n  // 防抖的 text，用于输入防抖\n  const debounceText = useDebounce(text);\n  // 搜索配置\n  const searchConfig = useRef<SearchConfig>({\n    limit: 20,\n    offset: 0,\n    count: 0,\n    isEnd: false,\n  });\n  const textChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const val = e.target.value;\n    if (!isCompositionInput) {\n      setText(val);\n    }\n  };\n  const inputBegin = () => {\n    setIsCompositionInput(true);\n  };\n  const inputEnded = (e: React.CompositionEvent<HTMLInputElement>) => {\n    const val = (e.target as HTMLInputElement).value;\n    setText(val);\n    setIsCompositionInput(false);\n  };\n  const recordSearchHistory = (songName: string) => {\n    window.setTimeout(() => {\n      const idx = historyList.indexOf(songName);\n      if (idx !== -1) {\n        historyList.splice(idx, 1);\n      }\n      historyList.unshift(songName);\n      sessionStorage.setItem('history', historyList.toString());\n      setHistoryList([...historyList]);\n    }, 0);\n  };\n  const search = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const which: number = (e as any).which;\n    if (which === 13) {\n      const val = (e.target as HTMLInputElement).value;\n      setSearchText(val);\n      setCount(c => c + 1);\n      setOffsetConfig({\n        offset: 0,\n        isScrollTrigger: false,\n      });\n      searchBoxRef.current!.blur();\n      recordSearchHistory(val);\n    }\n  };\n  const clickHeadItem = () => {\n    setSearchText(text);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    searchBoxRef.current!.blur();\n    recordSearchHistory(text);\n  };\n  const clickItem = (e: React.SyntheticEvent) => {\n    const innerText = (e.target as HTMLLIElement).innerText;\n    searchBoxRef.current!.value = innerText;\n    setText(innerText);\n    setSearchText(innerText);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    searchBoxRef.current!.blur();\n    recordSearchHistory(innerText);\n  };\n  const suggestList = () => {\n    if (!suggest.length) {\n      return null;\n    }\n    return suggest.map((item: any, index: number) => (\n      <li className=\"tip\" key={index} onClick={clickItem}>\n        <Icon type=\"search\" size=\"xs\" className=\"icon\" />\n        <div className=\"tip-content\">{item.keyword}</div>\n      </li>\n    ));\n  };\n  const clickHot = (e: React.SyntheticEvent) => {\n    const innerText = (e.target as HTMLLIElement).innerText;\n    searchBoxRef.current!.value = innerText;\n    setText(innerText);\n    setSearchText(innerText);\n    setCount(c => c + 1);\n    setOffsetConfig({\n      offset: 0,\n      isScrollTrigger: false,\n    });\n    recordSearchHistory(innerText);\n  };\n  const inputFocus = () => {\n    setIsResultPage(false);\n    // setNoNeepSuggest(false);\n    setIsSearchTips(true);\n  };\n  const inputBlur = () => {\n    if (!text) {\n      setIsSearchTips(false);\n    }\n  };\n  const clearInput = () => {\n    setText('');\n    setIsSearchTips(false);\n    setIsResultPage(false);\n    searchBoxRef.current!.value = '';\n  };\n  const clearIconVisible = (): React.CSSProperties => {\n    if (!text) {\n      return { visibility: 'hidden' };\n    }\n    return { visibility: 'visible' };\n  };\n  const holderVisible = (): React.CSSProperties => {\n    if (text || isCompositionInput) {\n      return { visibility: 'hidden' };\n    }\n    return { visibility: 'visible' };\n  };\n  useEffect(() => {\n    const getHotList = async () => {\n      const res = await req('/search/hot');\n      if (res && res.result && res.result.hots) {\n        setHotList(res.result.hots);\n      }\n    };\n    getHotList();\n  }, []);\n  useEffect(() => {\n    const history = localStorage.getItem('history');\n    if (history) {\n      setHistoryList(history.split(','));\n    }\n  }, []);\n  useEffect(() => {\n    const getSeggest = async () => {\n      const res = await req(`/search/suggest?keywords=${debounceText}&type=mobile`);\n      if (res && res.result && res.result.allMatch) {\n        setSuggest(res.result.allMatch);\n      } else {\n        setSuggest([]);\n      }\n    };\n    // 这里由于 debounceText 是延时改变的，如果直接搜索进入结果页面，这个值才改变，这会导致这里重新触发一次\n    // 但是如果加入 isResultPage 判定, isResultPage 改变的时候也会触发这个，就会导致点删除掉输入框的时候，也会触发一次这个函数\n    if (debounceText && !isResultPage) {\n      setIsSearchTips(true);\n      getSeggest();\n    } else {\n      setIsSearchTips(false);\n    }\n    // 删掉 isResultPage，避免上面注释的情况\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [debounceText]);\n  useEffect(() => {\n    const getResult = async () => {\n      const res = await req(\n        `/search?limit=${searchConfig.current.limit}&keywords=${searchText}&offset=${searchConfig.current.offset}`\n      );\n      if (res && res.result) {\n        let isEnd = false;\n        const count = res.result.songCount;\n        const songListCount = res.result.songs.length;\n        if (!count || songListCount + searchConfig.current.offset >= count) {\n          isEnd = true;\n        }\n        searchConfig.current.count = count;\n        searchConfig.current.isEnd = isEnd;\n        if (!offsetConfig.isScrollTrigger) {\n          setResult(res.result);\n        } else {\n          const { songs } = result;\n          const handledSongs = [...songs, ...res.result.songs];\n          const handledResult = { ...result, songs: handledSongs };\n          setResult(handledResult);\n        }\n        // setIsResultPage(true);\n        // setNoNeepSuggest(false);\n      }\n    };\n    if (searchText) {\n      // 不是下拉触发的的搜索，重置搜索配置\n      if (!offsetConfig.isScrollTrigger) {\n        searchConfig.current.limit = 20;\n        searchConfig.current.offset = 0;\n        searchConfig.current.count = 0;\n        searchConfig.current.isEnd = false;\n        setIsResultPage(true);\n        setResult({});\n      } else {\n        searchConfig.current.offset = offsetConfig.offset;\n      }\n      getResult();\n    }\n    // 这里如果设定了依赖 result，后果很严重\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [searchText, searchCount, offsetConfig]);\n  return (\n    <div className=\"search-page\">\n      <section className=\"input-box\">\n        <div className=\"input-cover\">\n          <Icon type=\"search\" size=\"xxs\" className=\"search-icon\" />\n          <label className=\"placeholder\" style={holderVisible()}>\n            搜索歌曲、歌手、专辑\n          </label>\n          <input\n            type=\"search\"\n            name=\"search\"\n            className=\"input-content\"\n            autoComplete=\"off\"\n            onChange={textChange}\n            onCompositionStart={inputBegin}\n            onCompositionEnd={inputEnded}\n            onKeyUp={search}\n            onBlur={inputBlur}\n            onFocus={inputFocus}\n            defaultValue={text}\n            ref={searchBoxRef}\n          // 不能绑定 value，因为 onChange 如果没法改变 value 的话，会有无法输入的情况，\n          // 中文的情况会导致这种情况\n          // value\n          ></input>\n          <Icon\n            type=\"cross-circle-o\"\n            className=\"clear-icon\"\n            size=\"xxs\"\n            onClick={clearInput}\n            style={clearIconVisible()}\n          ></Icon>\n        </div>\n      </section>\n      <section style={{ display: isResultPage ? 'none' : 'block' }}>\n        <section className=\"search-tip\" style={{ display: isSearchTips ? 'block' : 'none' }}>\n          <section className=\"search-info\" onClick={clickHeadItem}>\n            搜索“{text}”\n          </section>\n          <ul className=\"tips\">{suggestList()}</ul>\n        </section>\n        <section className=\"search-default\" style={{ display: isSearchTips ? 'none' : 'block' }}>\n          <div className=\"search-hot\">\n            <div className=\"title\">热门搜索</div>\n            <ul className=\"list\">\n              {hotList.map(item => (\n                <li className=\"list-item\" key={item.first} onClick={clickHot}>\n                  {item.first}\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"search-history\">\n            <ul className=\"list\">\n              {historyList.map((item: string, idx: number) => (\n                <li className=\"list-item\" onClick={clickItem} key={idx}>\n                  <Icon type=\"right\" size=\"xs\" className=\"icon prefix-icon\" />\n                  <span className=\"item-content\">{item}</span>\n                  <Icon type=\"cross\" size=\"xs\" className=\"icon suffix-icon\" />\n                </li>\n              ))}\n            </ul>\n          </div>\n        </section>\n      </section>\n      <Result\n        config={searchConfig.current}\n        style={{ display: isResultPage ? 'block' : 'none' }}\n        result={result}\n        keyword={searchText}\n        setOffsetConfig={setOffsetConfig}\n      ></Result>\n    </div>\n  );\n};\n","import { useState, useEffect } from 'react';\r\n\r\nexport default function useDebounce<T>(value: T, delay: number = 300): T {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below).\r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value, delay]\r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import React from 'react';\r\nimport { Tabs } from 'antd-mobile';\r\nimport Recommend from '../components/recommend';\r\nimport Top from '../components/top';\r\nimport Search from '../components/search';\r\n\r\nconst tabs = [{ title: '推荐音乐' }, { title: '热歌榜' }, { title: '搜索' }];\r\nexport default () => {\r\n  return (\r\n    <Tabs tabs={tabs}>\r\n      <Recommend></Recommend>\r\n      <Top></Top>\r\n      <Search></Search>\r\n    </Tabs>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { req, parseHashParam } from '../../util';\r\nimport { Icon } from 'antd-mobile';\r\nimport './playList.less';\r\nimport SongList from '../songList';\r\n\r\nconst PlayList = () => {\r\n  const [id, setId] = useState<string | null>('');\r\n  const [res, setRes] = useState<any>({});\r\n  const [isFolded, setIsFolded] = useState<boolean>(true);\r\n  const renderIntroDtl = () => {\r\n    if (!res.description) {\r\n      return null;\r\n    }\r\n    const strArr: string[] = res.description.split('\\n');\r\n    return strArr.map((str: string, idx: number) => (\r\n      <span key={idx}>\r\n        {idx ? str : '简介：' + str}\r\n        <br />\r\n      </span>\r\n    ));\r\n  };\r\n  const changeFold = () => {\r\n    setIsFolded(i => !i);\r\n  };\r\n  const foldClassName = () => (isFolded ? 'intro-dtl line-3' : 'intro-dtl');\r\n  const formatPlayCount = (count: number): string => {\r\n    if (!count) {\r\n      return '0.0万';\r\n    }\r\n    const num = (count / 10000).toFixed(1);\r\n    return num + '万';\r\n  };\r\n  useEffect(() => {\r\n    const playListId = parseHashParam('id');\r\n    setId(playListId);\r\n  }, []);\r\n  useEffect(() => {\r\n    const getDetail = async () => {\r\n      const result = await req(`/playlist/detail?id=${id}&s=0`);\r\n      setRes(result?.playlist);\r\n    };\r\n    if (id) {\r\n      getDetail();\r\n    }\r\n  }, [id]);\r\n  return (\r\n    <div id=\"play-list\">\r\n      <section id=\"play-list-header\">\r\n        <section\r\n          className=\"play-list-bg\"\r\n          style={{ backgroundImage: `url(${res.coverImgUrl})` }}\r\n        ></section>\r\n      </section>\r\n      <section id=\"play-list-detail\">\r\n        <div className=\"cover\" style={{ backgroundImage: `url(${res.coverImgUrl})` }}>\r\n          <span className=\"list-icon\">歌单</span>\r\n          <span className=\"list-play-count\">{formatPlayCount(res.playCount)}</span>\r\n        </div>\r\n        <div className=\"play-list-info\">\r\n          <div className=\"play-list-name line-2\">{res.name}</div>\r\n          <div className=\"play-list-author\">\r\n            <div\r\n              className=\"avatar\"\r\n              style={{ backgroundImage: `url(${res.creator?.avatarUrl})` }}\r\n            ></div>\r\n            <span className=\"author-name\">{res.creator?.nickname}</span>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      <section id=\"play-list-intro\">\r\n        <div className=\"play-list-tags\">\r\n          标签：\r\n          {res.tags &&\r\n            res.tags.map((item: string) => (\r\n              <div key={item} className=\"play-list-tag\">\r\n                {item}\r\n              </div>\r\n            ))}\r\n        </div>\r\n        <div className=\"intro-dtl-box\">\r\n          <div className={foldClassName()}>{renderIntroDtl()}</div>\r\n          {isFolded ? (\r\n            <Icon type=\"down\" className=\"icon-btn\" size=\"xs\" onClick={changeFold} />\r\n          ) : (\r\n            <Icon type=\"up\" className=\"icon-btn\" size=\"xs\" onClick={changeFold} />\r\n          )}\r\n        </div>\r\n      </section>\r\n      <h3 className=\"title\">歌曲列表</h3>\r\n      <SongList songs={res.tracks} artists=\"ar\" album=\"al\" alias=\"alia\" showRate></SongList>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PlayList;\r\n","import React from 'react';\n\ninterface ProgressProps {\n  /** 当前播放时间 */\n  current: number;\n  /** 音乐总长 */\n  duration: number;\n  /** 客户端宽度 */\n  width: number;\n  /** 设置播放时间 */\n  setPlayTime: (time: number) => void;\n}\n\n/**\n * 播放进度条\n */\nconst Progress = ({ current, duration, width, setPlayTime }: ProgressProps) => {\n  const percent = ((current / duration) * 100).toFixed(2);\n  const click = (e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    e.stopPropagation();\n    const offset = 10.769 * width / 100;\n    const long = (100 - 2 * 10.769) * width / 100;\n    const { pageX } = e\n    const percent = (pageX - offset) / long;\n    const time = duration * percent;\n    setPlayTime(time)\n  };\n  const formatCurrent = () => {\n    const time = Math.floor(current);\n    const min = (time / 60) >>> 0;\n    const sec = time % 60;\n    return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}`\n  }\n  const formatDuration = React.useMemo(() => {\n    const time = Math.floor(duration);\n    const min = (time / 60) >>> 0;\n    const sec = time % 60;\n    return `${min.toString().padStart(2, '0')}:${sec.toString().padStart(2, '0')}`\n  }, [duration])\n  return (\n    <>\n      <div className=\"progress\" onClick={click}>\n        <div className=\"finish\" style={{ width: `${percent}%` }}></div>\n      </div>\n      <div className=\"play-time\">\n        {formatCurrent()} / {formatDuration}\n      </div>\n    </>\n  );\n};\n\nexport default React.memo(Progress);\n","import React, { useState, useRef, useContext } from 'react';\nimport Progress from './progress';\nimport { matrix2Deg } from '../../util';\nimport Store from '../../store';\nimport './play.less';\n\ninterface NextLrcItem {\n  el: HTMLDivElement | null,\n  idx: number\n}\n\nconst Play = () => {\n  const store = useContext(Store);\n  const state = store!.state;\n  const [parsed, setParsed] = useState<boolean>(true);\n  /** 用于控制圆盘是否转动，播放的时候圆盘是转动的，暂停的时候不是 */\n  const [imgClass, setImgClass] = useState('song-img');\n  /** 上次暂停停止的角度，默认是0 */\n  const [lastDeg, setLastDeg] = useState<number>(0);\n  /** Audio 标签的引用 */\n  const audioTag = useRef<HTMLAudioElement | null>(null);\n  /** 下一个歌词所在行 */\n  const nextLrc = useRef<NextLrcItem>({ el: null, idx: 0 });\n  /** 歌曲长度 */\n  const [duration, setDuration] = useState<number | undefined>(0);\n  /** 当前播放时间 */\n  const [current, setCurrent] = useState<number>(0);\n  /** 歌词的偏移，用于滚动歌曲 */\n  const [scrollTranslate, setScrollTranslate] = useState<number>(0);\n  /** 每句歌曲的高度 */\n  const [lrcHeightList, setLrcHeightList] = useState<number[]>([])\n  /** 每句歌曲的时间线 */\n  const [timelineList, setTimelineList] = useState<number[]>([])\n  /** 修改播放时间的时候会重新触发一次 onCanPlay  */\n  const [isAudioReadyFirstTrigget, changeStatus] = useState<boolean>(true)\n  const picStyle = { backgroundImage: `url(${state.songInfo.picUrl})` };\n  /**\n   * 切换播放和暂停状态\n   */\n  const toggle = () => {\n    if (audioTag.current!.paused) {\n      setImgClass('song-img circling');\n      audioTag.current!.play();\n      setParsed(false);\n    } else {\n      setImgClass('song-img');\n      const imgTag = document.querySelector<HTMLDivElement>('.song-img');\n      const rollTag = document.querySelector<HTMLDivElement>('.song-roll-wrap');\n      const eleTransform = window.getComputedStyle(imgTag!).transform;\n      const matrix = eleTransform.match(/-?(\\d+\\.?\\d*)/g);\n      const matrixParams = [].slice.call(matrix!, 0, 4).map(Number);\n      const offsetDeg = matrix2Deg(\n        matrixParams[0],\n        matrixParams[1],\n        matrixParams[2],\n        matrixParams[3]\n      );\n      const deg = offsetDeg + lastDeg;\n      const finalDeg = deg >= 360 ? deg - 360 : deg;\n      setLastDeg(finalDeg);\n      rollTag!.style.transform = eleTransform;\n      audioTag.current!.pause();\n      setParsed(true);\n    }\n  };\n  /**\n   * 音频准备完成\n   */\n  const audioReady = () => {\n    // 修改进度条的时候会触发这个方法，所以要处理一下\n    if (isAudioReadyFirstTrigget) {\n      changeStatus(false)\n      const dur = audioTag.current?.duration;\n      setDuration(dur);\n      const lyric: string = state.songInfo.lyric;\n      if (lyric) {\n        const lrcList = [...document.querySelectorAll<HTMLDivElement>('.lrc-item')];\n        const heightList = lrcList.map(item => item.offsetHeight)\n        const tlList = lrcList.map(item => Number(item.getAttribute('data-timeline')))\n        setLrcHeightList(heightList)\n        setTimelineList(tlList)\n        const firstLrc = document.querySelector<HTMLDivElement>('.lrc-item');\n        firstLrc!.style.color = 'white';\n        const nextEle = firstLrc!.nextElementSibling as HTMLDivElement | null;\n        nextLrc.current = { el: nextEle, idx: 1 }\n      }\n    }\n  };\n  const songEnd = () => {\n    setCurrent(0);\n    setImgClass('song-img');\n    setScrollTranslate(0);\n    audioTag.current!.currentTime = 0\n    setParsed(true)\n  }\n  /**\n   * audio 的时间更新事件，用于动态更新歌词\n   * @param e React的合成事件\n   */\n  const timeUpdate = (e: React.SyntheticEvent<HTMLAudioElement, Event>) => {\n    const currentTime = (e.target as HTMLAudioElement).currentTime;\n    const { el, idx } = nextLrc.current\n    const nextLrcTime = timelineList[idx];\n    if (nextLrcTime) {\n      const compareTime = Number(nextLrcTime);\n      // 因为动画有 .3秒，所以不能等时间线到的时候才滚歌曲，会有延迟的感觉\n      if (compareTime - currentTime <= 0.3) {\n        const prevEle = el!.previousElementSibling as HTMLDivElement;\n        const height = lrcHeightList[idx - 1];\n        prevEle.style.color = null;\n        el!.style.color = 'white';\n        const nextEle = el!.nextElementSibling as HTMLDivElement | null;\n        const next = { el: nextEle, idx: idx + 1 }\n        nextLrc.current = next;\n        setScrollTranslate(x => x + height);\n      }\n    }\n    setCurrent(currentTime);\n  };\n  /**\n   * \n   * @param time 转跳的时间\n   */\n  const setPlayTime = (time: number) => {\n    const lyric: string = state.songInfo.lyric;\n    // 防止没有歌词时候报错\n    if (lyric) {\n      const moreTimeIdx = timelineList.findIndex(i => i > time);\n      const list = moreTimeIdx !== -1 ? lrcHeightList.slice(0, moreTimeIdx - 1) : lrcHeightList;\n      const offset = list.reduce((a, b) => a + b);\n      const { el, idx } = nextLrc.current\n      let prevEle: HTMLDivElement | null = null;\n      const nodeList = [...document.querySelectorAll<HTMLDivElement>('.lrc-item')]\n      const targetEles = moreTimeIdx !== -1 ? nodeList.slice(0, moreTimeIdx) : nodeList;\n      const targetEle = targetEles[targetEles.length - 1]\n      if (el) {\n        const eleList = nodeList.slice(0, idx)\n        prevEle = eleList[eleList.length - 1]\n      } else {\n        prevEle = nodeList[nodeList.length - 1]\n      }\n      // 当前歌词切换\n      prevEle.style.color = null;\n      targetEle.style.color = '#fff';\n      nextLrc.current = {\n        el: targetEle.nextElementSibling as HTMLDivElement | null,\n        idx: moreTimeIdx\n      }\n      setScrollTranslate(offset)\n    }\n    setCurrent(time);\n    audioTag.current!.currentTime = time\n  }\n  const renderLyric = () => {\n    const lyric: string = state.songInfo.lyric;\n    if (!lyric) {\n      return null;\n    }\n    const lyricList = lyric\n      .split('\\n')\n      .slice(0, -1)\n      .map(i => {\n        const item = i.split(']');\n        const time = item[0].slice(1);\n        const [min, sec] = time.split(':').map(Number);\n        const totalSec = (min * 60 + sec).toFixed(3);\n        return [totalSec, item[1].trim()];\n      });\n    return lyricList.map((i: string[], idx: number) =>\n      i[1] ? (\n        <div className=\"lrc-item\" data-timeline={i[0]} key={idx}>\n          {i[1]}\n        </div>\n      ) : (\n          // 处理歌词中的空行\n          <div className=\"lrc-item\" data-timeline={i[0]} key={idx}>\n            &nbsp;\n        </div>\n        )\n    );\n  };\n\n  return (\n    <section className=\"play\" onClick={toggle}>\n      <section className=\"recorder\"></section>\n      <section className=\"play-bg\" style={picStyle}></section>\n      <section className=\"play-zone\">\n        <div className=\"song-disc\">\n          <div className=\"song-roll-wrap\" style={{ transform: `rotate(${lastDeg}deg)` }}>\n            <div className={imgClass} style={picStyle}></div>\n          </div>\n          <div className=\"parse-icon\" style={{ display: parsed ? undefined : 'none' }}></div>\n        </div>\n        <div className=\"song-info\">\n          <div className=\"song-title\">\n            <span className=\"song-name\">{state.songInfo.name}</span>\n            <span className=\"song-gap\">-</span>\n            <span className=\"artists\">{state.songInfo.artists}</span>\n          </div>\n          <div className=\"lyric\">\n            <div className=\"song-scroll\" style={{ transform: `translateY(-${scrollTranslate}px)` }}>\n              {renderLyric()}\n            </div>\n          </div>\n        </div>\n        <div className=\"progress-bar\">\n          <Progress current={current} duration={duration!} width={state.clientWidth} setPlayTime={setPlayTime}></Progress>\n        </div>\n      </section>\n      {state.songInfo.songUrl && (\n        <audio\n          src={state.songInfo.songUrl}\n          ref={audioTag}\n          onEnded={songEnd}\n          onCanPlay={audioReady}\n          onTimeUpdate={timeUpdate}\n        ></audio>\n      )}\n    </section>\n  );\n};\n\nexport default Play;\n","import React, { useEffect, useState, useReducer } from 'react';\nimport FixHeader from './header';\nimport Tabs from './header/tabs';\nimport PlayList from './components/recommend/playList';\nimport Play from './components/play';\nimport './index.less';\nimport Store, { reducer, initState } from './store';\nimport { debounce } from './util';\n\nconst App: React.FC = () => {\n  const [state, dispatch] = useReducer(reducer, initState);\n  const [page, setPage] = useState('/');\n  const jump = () => {\n    const { location } = window;\n    const { hash } = location;\n    if (hash.includes('/playList')) {\n      setPage('/playList');\n    } else if (hash.includes('/play')) {\n      setPage('/play');\n    } else {\n      setPage('/');\n    }\n  };\n  const renderPage = () => {\n    switch (page) {\n      case '/playList':\n        return <PlayList />;\n      case '/play':\n        return <Play />;\n      case '/':\n      default:\n        return (\n          <>\n            <FixHeader />\n            <main id=\"main\">\n              <Tabs />\n            </main>\n          </>\n        );\n    }\n  };\n  useEffect(() => {\n    jump();\n    window.addEventListener(\n      'hashchange',\n      () => {\n        jump();\n      },\n      false\n    );\n  }, [])\n  useEffect(() => {\n    const getClientWidth = () => {\n      const width = document.documentElement.clientWidth;\n      dispatch({ type: 'setClientWidth', width })\n    }\n    window.addEventListener('resize', debounce(() => {\n      getClientWidth()\n    }, 300), false)\n    getClientWidth()\n  }, [])\n  return (\n    <div className=\"App\">\n      <Store.Provider value={{ state, dispatch }}>{renderPage()}</Store.Provider>\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}